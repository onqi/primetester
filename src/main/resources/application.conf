akka {
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  loglevel = "INFO"
  stdout-loglevel = "INFO"

  log-dead-letters = 10
  log-dead-letters-during-shutdown = on

  actor {
    deployment {
      /clusterProxy/workerRouter {
        router = smallest-mailbox-pool
        routees.paths = ["/user/worker"]
        cluster {
          enabled = on
          use-role = worker
          allow-local-routees = on
        }
      }
    }
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    auto-down-unreachable-after = 10s
    min-nr-of-members = 3
    role {
      frontend.min-nr-of-members = 1
      worker.min-nr-of-members = 2
    }
    seed-nodes = [
      "akka.tcp://PrimeTesterCluster@127.0.0.1:2551",
      "akka.tcp://PrimeTesterCluster@127.0.0.1:2552"
    ]
    pub-sub {
      routing-logic = broadcast
    }
  }
  extensions = ["akka.cluster.pubsub.DistributedPubSub"]
}